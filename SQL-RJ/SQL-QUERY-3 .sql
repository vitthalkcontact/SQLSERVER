--USER ID AND PASSWORD
-- WHERE THEY DUMPED THE DATABASE
-- WHICH DATABSE WE HAVE TO CONSIDER OUT OF MANY IF EXISTS

--REALTIONSHIP BETWEEN INNER JOIN AND CROSS JOIN
SELECT CJ1.RNO, CJ1.NAME, CJ2.MARKS
FROM CJ1
CROSS JOIN CJ2;


SELECT CJ1.RNO, CJ1.NAME, CJ2.MARKS
FROM CJ1
INNER JOIN CJ2
ON CJ1.RNO = CJ2.RNO;


SELECT CJ1.RNO, CJ1.NAME, CJ2.MARKS
FROM CJ1
CROSS JOIN CJ2
WHERE CJ1.RNO = CJ2.RNO;

-- CROSS JOIN + WHERE = INNER JOIN

-- THERE IS NO SELF JOINT BUT SELF JOINT IS COMPARING WITHIN A TABLE DIFFRENT COLUMNS OR FIELDS

-- CLAUSES: UNION, UNION ALL , INTERSECT, EXCEPT 

--INDEX : LOOK UP TABLE
CREATE INDEX IND_CT1 ON EMP (CITY);

DROP INDEX IND_CT1 ON EMP;

--COMPOSITE INDEX
CREATE INDEX IND_CT2 ON EMP (CITY, ADDR2);

-- INDEX : IMPLICIT CLUSTERING AND EXPLICIT CLUSTERING
CREATE CLUSTER INDEX CLUST_CTY ON EMP (CITY)

--NOTE: ONLY ONE CLUSTER INDEX WILL BE THERE. if PRIMARY KEY IS THER IT IS AUTOMATICALLY CLUSER INDEX BEFORE PRIMARY KEY SJOULD BE THERE. LATER CREATED PRIMARY KEY IS NORMAL INDEX

-- CLUSTER INDEX: LOCATION OF MEMRY CHANGES

--VIEW
CREATE VIEW DDNEMP
AS (SELECT * FROM EMP WHERE CITY = 'DEHRADUN');


SELECT * FROM DDNEMP;

-- VIEWS RESTRICT THE ACCESS DATA TO THE USER


CREATE VIEW COMP_INFO
AS (SELECT EMP.EID, NAME, DOJ, DESI, SALARY AS 'BASIC', SALARY *.9 AS 'PF', SALARY*.15 AS 'HRA'
	FROM EMP
	INNER JOIN EMP_SAL
	ON EMP.EID = EMP_SAL.EID);

SELECT * FRPM COMP_INFO;

--SUBQUERY or INNER QUERY OR NESTED QUERY upto 32
--SELECT NAME, DOB FROM EMAP
WHERE EID IN (SELECT EID FROM EMP_SAL WHERE DESI = 'MANAGER');


--procedures
CREATE PROCEDURE POSEMP
AS
BEGIN
SELECT * FROM EMP;
END;

EXECUTE POSEMP;

EXE POSEMP;

POSEMP;


CREATE PROCEDURE PROS @X AS VARCHAR(20)
AS
BEGIN
		EXEC ('SELECT * FROM' + @X);
END;

PROS 'EMP


























