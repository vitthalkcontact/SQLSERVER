use test;

CREATE FUNCTION BDAY()
RETURNS TABLE
AS
	RETURN(SELECT * FROM EMP 
			WHERE MONTH (DOB)=MONTH (GETDATE()));

SELECT * FROM DBO.BDAY();


--- SUB QUERIES --

SELECT * FROM EMP;
SELECT * FROM EMP_SAL;
SELECT * FROM EMP_SAL WHERE DESI ='MANAGER';

SELECT * FROM EMP 
WHERE EID IN (1004,1007,1008,1010,1013,1028);

SELECT * FROM EMP 
WHERE EID IN (SELECT EID FROM EMP_SAL WHERE DESI ='MANAGER');

SELECT * FROM EMP 
WHERE EID IN (SELECT EID FROM EMP_SAL WHERE DESI ='MANAGER' )
ORDER BY CITY;

SELECT * FROM EMP 
WHERE EID IN (SELECT EID FROM EMP_SAL WHERE SALARY >=400000);

SELECT * FROM EMP 
WHERE EID IN (SELECT EID FROM EMP_SAL WHERE SALARY BETWEEN 200000 AND 400000);


SELECT * FROM TRAINING;

DELETE TRAINING;

SELECT E1.EID, E1.NAME, E2.DEPT, E2.DESI 
FROM EMP E1
INNER JOIN EMP_SAL E2
ON E1.EID=E2.EID
WHERE DEPT='MIS';

INSERT INTO TRAINING (EID, NAME, DEPT)
(SELECT E1.EID, E1.NAME, E2.DEPT
FROM EMP E1
INNER JOIN EMP_SAL E2
ON E1.EID=E2.EID
WHERE DEPT='MIS');

UPDATE TRAINING SET MODULE ='SQL';

SELECT * FROM TRAINING;

DELETE FROM TRAINING
WHERE EID IN (1004,1010,1013);

DELETE FROM TRAINING
WHERE EID IN (SELECT EID FROM EMP_SAL WHERE DESI='MANAGER');

SELECT * FROM EMP;
SELECT * FROM EMP_SAL;

SELECT * FROM EMP 
WHERE CITY = 'DEHRADUN' OR CITY = 'CHANDIGARH';

SELECT EID,salary , SALARY +( SALARY *.15)  as 'revised salary' FROM EMP_SAL
WHERE EID IN (SELECT EID FROM EMP WHERE CITY = 'DEHRADUN' OR CITY = 'CHANDIGARH');

UPDATE EMP_SAL SET SALARY = SALARY + SALARY *.15 
WHERE EID IN(SELECT EID FROM EMP WHERE CITY = 'DEHRADUN' OR CITY = 'CHANDIGARH');

SELECT COUNT (EID) AS' TEAM SIZE', AVG(SALARY) FROM EMP_SAL;

SELECT COUNT (EID) AS' TEAM SIZE', AVG(SALARY) AS 'AVG SAL DEL' FROM EMP_SAL
WHERE EID IN ( SELECT EID FROM EMP WHERE CITY ='DELHI');


SELECT COUNT (EID) AS' TEAM SIZE', AVG(SALARY) AS 'AVG SAL DEL' FROM EMP_SAL
WHERE EID IN ( SELECT EID FROM EMP WHERE CITY ='DELHI' 
				AND EID IN (SELECT EID FROM EMP_sAL WHERE SALARY >100000));


--EXISTS - CHECKS FOR THE EXISTANCE 

SELECT * FROM EMP_SAL WHERE DEPT ='HR'
AND EXISTS(SELECT * FROM EMP_SAL WHERE SALARY >100000 AND DEPT='HR');

--- PROCEDURES

CREATE PROCEDURE PROSEMP 
AS
BEGIN
		SELECT * FROM EMP;

END;

EXECUTE PROSEMP;

EXEC PROSEMP;

PROSEMP;

DROP PROCEDURE PROSEMP;

CREATE PROCEDURE PROS @X AS VARCHAR(20) 
AS
BEGIN
		EXEC ('SELECT * FROM ' +  @X );

END;

PROS 'EMP';



CREATE PROCEDURE PROSEMP @X AS VARCHAR(20) 
AS
BEGIN
		SELECT EMP.EID, NAME, CITY, DOJ , DEPT , DESI , SALARY AS 'BASIC', 
				SALARY *.9 AS 'PF', SALARY * .15 AS 'HRA'
		FROM EMP
		INNER JOIN EMP_SAL
		ON EMP.EID=EMP_SAL.EID
		WHERE DEPT= @X;

END;

PROSEMP 'HR';

SELECT * FROM EMP;
SELECT * FROM EMP_SAL;

CREATE PROCEDURE PINEMP @ID INT, @N VARCHAR(50), @A1 VARCHAR(50),@A2 VARCHAR(50),@C VARCHAR(30),@PH CHAR(15), @EM VARCHAR(50),@DB DATE, @DJ DATE, @DPT VARCHAR(20), @DEI VARCHAR(30), @SAL INT
AS
BEGIN
		SET NOCOUNT ON;
		INSERT INTO EMP 
		VALUES  (@ID,@N, @A1, @A2, @C, @PH, @EM, @DB, @DJ);

		INSERT INTO EMP_SAL
		VALUES(@ID, @DPT , @DEI , @SAL );

		SELECT * FROM EMP WHERE EID= @ID;
		SELECT * FROM EMP_SAL WHERE EID= @ID;

END;

DROP PROCEDURE PINEMP ;

DELETE EMP WHERE EID=1064;
DELETE EMP_SAL WHERE EID=1064;

PINEMP 1064,'RAJ KUMAR' , 'HNO 120 LANE 6', 'SECTOR 12', 'CHANDIGARH', '9899898980', 'RK64@GMAIL.COM','12-12-1989','20-DEC-2019', 'OPS', 'ASSOCOATE', 50000;


USE LEARN;

CREATE TABLE TEST2
(ID INT,
NAME VARCHAR(10));

INSERT INTO TEST2 VALUES (1,'A');
INSERT INTO TEST2 VALUES (2,'B');
INSERT INTO TEST2 VALUES (3,'C');
INSERT INTO TEST2 VALUES (4,'D');
INSERT INTO TEST2 VALUES (5,'E');
INSERT INTO TEST2 VALUES (6,'F');
INSERT INTO TEST2 VALUES (7,'G');
INSERT INTO TEST2 VALUES (8,'H');
INSERT INTO TEST2 VALUES (9,'I');
INSERT INTO TEST2 VALUES (10,'J');

SELECT * FROM TEST2;

DELETE TEST2 WHERE ID =10;

ROLLBACK;

BEGIN TRANSACTION;

DELETE TEST2 WHERE ID =9;

SELECT * FROM TEST2;

BEGIN TRANSACTION;

DELETE TEST2 WHERE ID =9;
DELETE TEST2 WHERE ID =8;
DELETE TEST2 WHERE ID =7;
DELETE TEST2 WHERE ID =6;


BEGIN TRANSACTION;

DELETE TEST2 WHERE ID =9;
DELETE TEST2 WHERE ID =8;

COMMIT;


BEGIN TRANSACTION;
		DELETE TEST2 WHERE ID =5;
	SAVE TRANSACTION T1;
		DELETE TEST2 WHERE ID =6;

	SAVE TRANSACTION T2; -- SAVE POINTS
		DELETE TEST2 WHERE ID =7;
		DELETE TEST2 WHERE ID =8;

	SAVE TRANSACTION T3;
		DELETE TEST2 WHERE ID =9;

	SAVE TRANSACTION T4;
		DELETE TEST2 WHERE ID =10;

ROLLBACK TRANSACTION T2;

SELECT * FROM TEST2;

-- AUTO INCREMENT
DROP TABLE EMP2;
CREATE TABLE EMP2
(ID INT IDENTITY (1,1),
NAME VARCHAR(20),
AGE INT);

INSERT INTO EMP2 (NAME, AGE)
VALUES ('AJAY', 21);

INSERT INTO EMP2 (NAME, AGE)
VALUES ('kapil', 21);

INSERT INTO EMP2 
VALUES ('RAJ', 25);

INSERT INTO EMP2 
VALUES (10,'DEEPAK', 25);

SELECT * FROM EMP2;



create PROCEDURE INEMP2 @N VARCHAR(20), @X INT
AS
BEGIN 

		INSERT INTO EMP2 (NAME, AGE)
		VALUES(@N, @X);

		SELECT * FROM EMP2;
END;

INEMP2 'MANOJ',25;

DELETE EMP2 WHERE ID =7;